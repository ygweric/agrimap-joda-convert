//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-convert/build/mainTranslationExtraction/org/joda/convert/factory/NumericArrayStringConverterFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NumericArrayStringConverterFactory")
#ifdef RESTRICT_NumericArrayStringConverterFactory
#define INCLUDE_ALL_NumericArrayStringConverterFactory 0
#else
#define INCLUDE_ALL_NumericArrayStringConverterFactory 1
#endif
#undef RESTRICT_NumericArrayStringConverterFactory

#if !defined (OrgJodaConvertFactoryNumericArrayStringConverterFactory_) && (INCLUDE_ALL_NumericArrayStringConverterFactory || defined(INCLUDE_OrgJodaConvertFactoryNumericArrayStringConverterFactory))
#define OrgJodaConvertFactoryNumericArrayStringConverterFactory_

#define RESTRICT_StringConverterFactory 1
#define INCLUDE_OrgJodaConvertStringConverterFactory 1
#include "StringConverterFactory.h"

@class IOSClass;
@class JavaUtilRegexPattern;
@protocol OrgJodaConvertStringConverter;

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory : NSObject < OrgJodaConvertStringConverterFactory >

#pragma mark Public

- (id<OrgJodaConvertStringConverter>)findConverterWithIOSClass:(IOSClass *)cls;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory)

inline id<OrgJodaConvertStringConverterFactory> OrgJodaConvertFactoryNumericArrayStringConverterFactory_get_INSTANCE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<OrgJodaConvertStringConverterFactory> OrgJodaConvertFactoryNumericArrayStringConverterFactory_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryNumericArrayStringConverterFactory, INSTANCE, id<OrgJodaConvertStringConverterFactory>)

inline JavaUtilRegexPattern *OrgJodaConvertFactoryNumericArrayStringConverterFactory_get_DELIMITER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilRegexPattern *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DELIMITER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryNumericArrayStringConverterFactory, DELIMITER, JavaUtilRegexPattern *)

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertFactoryNumericArrayStringConverterFactory)

#endif

#if !defined (OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_) && (INCLUDE_ALL_NumericArrayStringConverterFactory || defined(INCLUDE_OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter))
#define OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

#define RESTRICT_TypedStringConverter 1
#define INCLUDE_OrgJodaConvertTypedStringConverter 1
#include "TypedStringConverter.h"

@class IOSClass;
@class IOSLongArray;
@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_Enum) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_Enum_INSTANCE = 0,
};

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter : JavaLangEnum < NSCopying, OrgJodaConvertTypedStringConverter >

#pragma mark Public

- (IOSLongArray *)convertFromStringWithIOSClass:(IOSClass *)arg0
                                   withNSString:(NSString *)arg1;

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_values_[];

inline OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter, INSTANCE)

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_values();

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertFactoryNumericArrayStringConverterFactory_LongArrayStringConverter)

#endif

#if !defined (OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_) && (INCLUDE_ALL_NumericArrayStringConverterFactory || defined(INCLUDE_OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter))
#define OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

#define RESTRICT_TypedStringConverter 1
#define INCLUDE_OrgJodaConvertTypedStringConverter 1
#include "TypedStringConverter.h"

@class IOSClass;
@class IOSIntArray;
@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_Enum) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_Enum_INSTANCE = 0,
};

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter : JavaLangEnum < NSCopying, OrgJodaConvertTypedStringConverter >

#pragma mark Public

- (IOSIntArray *)convertFromStringWithIOSClass:(IOSClass *)arg0
                                  withNSString:(NSString *)arg1;

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_values_[];

inline OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter, INSTANCE)

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_values();

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertFactoryNumericArrayStringConverterFactory_IntArrayStringConverter)

#endif

#if !defined (OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_) && (INCLUDE_ALL_NumericArrayStringConverterFactory || defined(INCLUDE_OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter))
#define OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

#define RESTRICT_TypedStringConverter 1
#define INCLUDE_OrgJodaConvertTypedStringConverter 1
#include "TypedStringConverter.h"

@class IOSClass;
@class IOSObjectArray;
@class IOSShortArray;

typedef NS_ENUM(NSUInteger, OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_Enum) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_Enum_INSTANCE = 0,
};

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter : JavaLangEnum < NSCopying, OrgJodaConvertTypedStringConverter >

#pragma mark Public

- (IOSShortArray *)convertFromStringWithIOSClass:(IOSClass *)arg0
                                    withNSString:(NSString *)arg1;

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_values_[];

inline OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter, INSTANCE)

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_values();

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertFactoryNumericArrayStringConverterFactory_ShortArrayStringConverter)

#endif

#if !defined (OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_) && (INCLUDE_ALL_NumericArrayStringConverterFactory || defined(INCLUDE_OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter))
#define OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

#define RESTRICT_TypedStringConverter 1
#define INCLUDE_OrgJodaConvertTypedStringConverter 1
#include "TypedStringConverter.h"

@class IOSClass;
@class IOSDoubleArray;
@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_Enum) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_Enum_INSTANCE = 0,
};

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter : JavaLangEnum < NSCopying, OrgJodaConvertTypedStringConverter >

#pragma mark Public

- (IOSDoubleArray *)convertFromStringWithIOSClass:(IOSClass *)arg0
                                     withNSString:(NSString *)arg1;

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_values_[];

inline OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter, INSTANCE)

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_values();

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertFactoryNumericArrayStringConverterFactory_DoubleArrayStringConverter)

#endif

#if !defined (OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_) && (INCLUDE_ALL_NumericArrayStringConverterFactory || defined(INCLUDE_OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter))
#define OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

#define RESTRICT_TypedStringConverter 1
#define INCLUDE_OrgJodaConvertTypedStringConverter 1
#include "TypedStringConverter.h"

@class IOSClass;
@class IOSFloatArray;
@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_Enum) {
  OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_Enum_INSTANCE = 0,
};

@interface OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter : JavaLangEnum < NSCopying, OrgJodaConvertTypedStringConverter >

#pragma mark Public

- (IOSFloatArray *)convertFromStringWithIOSClass:(IOSClass *)arg0
                                    withNSString:(NSString *)arg1;

+ (OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_values_[];

inline OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter, INSTANCE)

FOUNDATION_EXPORT IOSObjectArray *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_values();

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter *OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertFactoryNumericArrayStringConverterFactory_FloatArrayStringConverter)

#endif

#pragma pop_macro("INCLUDE_ALL_NumericArrayStringConverterFactory")
