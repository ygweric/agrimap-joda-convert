//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-convert/build/mainTranslationExtraction/org/joda/convert/StringConvert.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_StringConvert")
#ifdef RESTRICT_StringConvert
#define INCLUDE_ALL_StringConvert 0
#else
#define INCLUDE_ALL_StringConvert 1
#endif
#undef RESTRICT_StringConvert

#if !defined (OrgJodaConvertStringConvert_) && (INCLUDE_ALL_StringConvert || defined(INCLUDE_OrgJodaConvertStringConvert))
#define OrgJodaConvertStringConvert_

@class IOSClass;
@class IOSObjectArray;
@protocol OrgJodaConvertFromStringConverter;
@protocol OrgJodaConvertStringConverter;
@protocol OrgJodaConvertStringConverterFactory;
@protocol OrgJodaConvertToStringConverter;
@protocol OrgJodaConvertTypedStringConverter;

@interface OrgJodaConvertStringConvert : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithBoolean:(jboolean)includeJdkConverters
withOrgJodaConvertStringConverterFactoryArray:(IOSObjectArray *)factories;

- (id)convertFromStringWithIOSClass:(IOSClass *)cls
                       withNSString:(NSString *)str;

- (NSString *)convertToStringWithIOSClass:(IOSClass *)cls
                                   withId:(id)object;

- (NSString *)convertToStringWithId:(id)object;

+ (OrgJodaConvertStringConvert *)create;

- (id<OrgJodaConvertStringConverter>)findConverterWithIOSClass:(IOSClass *)cls;

- (id<OrgJodaConvertStringConverter>)findConverterNoGenericsWithIOSClass:(IOSClass *)cls;

- (id<OrgJodaConvertTypedStringConverter>)findTypedConverterWithIOSClass:(IOSClass *)cls;

- (id<OrgJodaConvertTypedStringConverter>)findTypedConverterNoGenericsWithIOSClass:(IOSClass *)cls;

- (jboolean)isConvertibleWithIOSClass:(IOSClass *)cls;

- (void)register__WithIOSClass:(IOSClass *)cls
withOrgJodaConvertStringConverter:(id<OrgJodaConvertStringConverter>)converter;

- (void)register__WithIOSClass:(IOSClass *)cls
withOrgJodaConvertToStringConverter:(id<OrgJodaConvertToStringConverter>)toString
withOrgJodaConvertFromStringConverter:(id<OrgJodaConvertFromStringConverter>)fromString;

- (void)registerFactoryWithOrgJodaConvertStringConverterFactory:(id<OrgJodaConvertStringConverterFactory>)factory;

- (void)registerMethodConstructorWithIOSClass:(IOSClass *)cls
                                 withNSString:(NSString *)toStringMethodName;

- (void)registerMethodsWithIOSClass:(IOSClass *)cls
                       withNSString:(NSString *)toStringMethodName
                       withNSString:(NSString *)fromStringMethodName;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(OrgJodaConvertStringConvert)

inline OrgJodaConvertStringConvert *OrgJodaConvertStringConvert_get_INSTANCE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgJodaConvertStringConvert *OrgJodaConvertStringConvert_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertStringConvert, INSTANCE, OrgJodaConvertStringConvert *)

FOUNDATION_EXPORT OrgJodaConvertStringConvert *OrgJodaConvertStringConvert_create();

FOUNDATION_EXPORT void OrgJodaConvertStringConvert_init(OrgJodaConvertStringConvert *self);

FOUNDATION_EXPORT OrgJodaConvertStringConvert *new_OrgJodaConvertStringConvert_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaConvertStringConvert *create_OrgJodaConvertStringConvert_init();

FOUNDATION_EXPORT void OrgJodaConvertStringConvert_initWithBoolean_withOrgJodaConvertStringConverterFactoryArray_(OrgJodaConvertStringConvert *self, jboolean includeJdkConverters, IOSObjectArray *factories);

FOUNDATION_EXPORT OrgJodaConvertStringConvert *new_OrgJodaConvertStringConvert_initWithBoolean_withOrgJodaConvertStringConverterFactoryArray_(jboolean includeJdkConverters, IOSObjectArray *factories) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaConvertStringConvert *create_OrgJodaConvertStringConvert_initWithBoolean_withOrgJodaConvertStringConverterFactoryArray_(jboolean includeJdkConverters, IOSObjectArray *factories);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertStringConvert)

#endif

#pragma pop_macro("INCLUDE_ALL_StringConvert")
