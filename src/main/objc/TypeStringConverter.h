//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-convert/build/mainTranslationExtraction/org/joda/convert/TypeStringConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_TypeStringConverter")
#ifdef RESTRICT_TypeStringConverter
#define INCLUDE_ALL_TypeStringConverter 0
#else
#define INCLUDE_ALL_TypeStringConverter 1
#endif
#undef RESTRICT_TypeStringConverter

#if !defined (OrgJodaConvertTypeStringConverter_) && (INCLUDE_ALL_TypeStringConverter || defined(INCLUDE_OrgJodaConvertTypeStringConverter))
#define OrgJodaConvertTypeStringConverter_

#define RESTRICT_AbstractTypeStringConverter 1
#define INCLUDE_OrgJodaConvertAbstractTypeStringConverter 1
#include "AbstractTypeStringConverter.h"

#define RESTRICT_TypedStringConverter 1
#define INCLUDE_OrgJodaConvertTypedStringConverter 1
#include "TypedStringConverter.h"

@class IOSClass;
@protocol JavaLangReflectType;

@interface OrgJodaConvertTypeStringConverter : OrgJodaConvertAbstractTypeStringConverter < OrgJodaConvertTypedStringConverter >

#pragma mark Public

- (instancetype)init;

- (id<JavaLangReflectType>)convertFromStringWithIOSClass:(IOSClass *)cls
                                            withNSString:(NSString *)str;

- (NSString *)convertToStringWithId:(id<JavaLangReflectType>)object;

- (IOSClass *)getEffectiveType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaConvertTypeStringConverter)

FOUNDATION_EXPORT void OrgJodaConvertTypeStringConverter_init(OrgJodaConvertTypeStringConverter *self);

FOUNDATION_EXPORT OrgJodaConvertTypeStringConverter *new_OrgJodaConvertTypeStringConverter_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaConvertTypeStringConverter *create_OrgJodaConvertTypeStringConverter_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaConvertTypeStringConverter)

#endif

#pragma pop_macro("INCLUDE_ALL_TypeStringConverter")
