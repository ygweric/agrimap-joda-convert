//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-convert/build/mainTranslationExtraction/org/joda/convert/factory/BooleanArrayStringConverterFactory.java
//

#include "BooleanArrayStringConverterFactory.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "StringConverter.h"
#include "StringConverterFactory.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"

#pragma clang diagnostic ignored "-Wprotocol"
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgJodaConvertFactoryBooleanArrayStringConverterFactory ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgJodaConvertFactoryBooleanArrayStringConverterFactory_init(OrgJodaConvertFactoryBooleanArrayStringConverterFactory *self);

__attribute__((unused)) static OrgJodaConvertFactoryBooleanArrayStringConverterFactory *new_OrgJodaConvertFactoryBooleanArrayStringConverterFactory_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaConvertFactoryBooleanArrayStringConverterFactory *create_OrgJodaConvertFactoryBooleanArrayStringConverterFactory_init();

inline IOSBooleanArray *OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_get_EMPTY();
static IOSBooleanArray *OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter, EMPTY, IOSBooleanArray *)

__attribute__((unused)) static void OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter *new_OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1 : OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter < NSCopying >

- (NSString *)convertToStringWithId:(IOSBooleanArray *)array;

- (IOSBooleanArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                      withNSString:(NSString *)str;

- (IOSClass *)getEffectiveType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1)

__attribute__((unused)) static void OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1_initWithNSString_withInt_(OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1 *new_OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(OrgJodaConvertFactoryBooleanArrayStringConverterFactory)

id<OrgJodaConvertStringConverterFactory> OrgJodaConvertFactoryBooleanArrayStringConverterFactory_INSTANCE;

@implementation OrgJodaConvertFactoryBooleanArrayStringConverterFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaConvertFactoryBooleanArrayStringConverterFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<OrgJodaConvertStringConverter>)findConverterWithIOSClass:(IOSClass *)cls {
  if (cls == IOSClass_booleanArray(1)) {
    return JreLoadEnum(OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter, INSTANCE);
  }
  return nil;
}

- (NSString *)description {
  return [[self getClass] getSimpleName];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaConvertStringConverter;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(findConverterWithIOSClass:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaConvertStringConverterFactory;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "findConverter", "LIOSClass;", "(Ljava/lang/Class<*>;)Lorg/joda/convert/StringConverter<*>;", "toString", &OrgJodaConvertFactoryBooleanArrayStringConverterFactory_INSTANCE, "LOrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryBooleanArrayStringConverterFactory = { "BooleanArrayStringConverterFactory", "org.joda.convert.factory", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, 5, -1, -1, -1 };
  return &_OrgJodaConvertFactoryBooleanArrayStringConverterFactory;
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryBooleanArrayStringConverterFactory class]) {
    OrgJodaConvertFactoryBooleanArrayStringConverterFactory_INSTANCE = new_OrgJodaConvertFactoryBooleanArrayStringConverterFactory_init();
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryBooleanArrayStringConverterFactory)
  }
}

@end

void OrgJodaConvertFactoryBooleanArrayStringConverterFactory_init(OrgJodaConvertFactoryBooleanArrayStringConverterFactory *self) {
  NSObject_init(self);
}

OrgJodaConvertFactoryBooleanArrayStringConverterFactory *new_OrgJodaConvertFactoryBooleanArrayStringConverterFactory_init() {
  J2OBJC_NEW_IMPL(OrgJodaConvertFactoryBooleanArrayStringConverterFactory, init)
}

OrgJodaConvertFactoryBooleanArrayStringConverterFactory *create_OrgJodaConvertFactoryBooleanArrayStringConverterFactory_init() {
  J2OBJC_CREATE_IMPL(OrgJodaConvertFactoryBooleanArrayStringConverterFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertFactoryBooleanArrayStringConverterFactory)

J2OBJC_INITIALIZED_DEFN(OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter)

OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter *OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_values_[1];

@implementation OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter

+ (IOSObjectArray *)values {
  return OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_values();
}

+ (OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter *)valueOfWithNSString:(NSString *)name {
  return OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "EMPTY", "[Z", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter, INSTANCE), &OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_EMPTY, "LOrgJodaConvertFactoryBooleanArrayStringConverterFactory;", "Ljava/lang/Enum<Lorg/joda/convert/factory/BooleanArrayStringConverterFactory$BooleanArrayStringConverter;>;Lorg/joda/convert/TypedStringConverter<[LZ;>;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter = { "BooleanArrayStringConverter", "org.joda.convert.factory", ptrTable, methods, fields, 7, 0x4408, 2, 2, 4, -1, -1, 5, -1 };
  return &_OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter;
}

+ (void)initialize {
  if (self == [OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter class]) {
    JreEnum(OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter, INSTANCE) = new_OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1_initWithNSString_withInt_(@"INSTANCE", 0);
    OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_EMPTY = [IOSBooleanArray newArrayWithLength:0];
    J2OBJC_SET_INITIALIZED(OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter)
  }
}

@end

void OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_initWithNSString_withInt_(OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter *new_OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_values() {
  OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_initialize();
  return [IOSObjectArray arrayWithObjects:OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_values_ count:1 type:OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_class_()];
}

OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter *OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_valueOfWithNSString_(NSString *name) {
  OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_initialize();
  for (int i = 0; i < 1; i++) {
    OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter *e = OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter *OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_fromOrdinal(NSUInteger ordinal) {
  OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter)

@implementation OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1

- (NSString *)convertToStringWithId:(IOSBooleanArray *)array {
  if (((IOSBooleanArray *) nil_chk(array))->size_ == 0) {
    return @"";
  }
  JavaLangStringBuilder *buf = new_JavaLangStringBuilder_initWithInt_(array->size_);
  for (jint i = 0; i < array->size_; i++) {
    (void) [buf appendWithChar:IOSBooleanArray_Get(array, i) ? 'T' : 'F'];
  }
  return [buf description];
}

- (IOSBooleanArray *)convertFromStringWithIOSClass:(IOSClass *)cls
                                      withNSString:(NSString *)str {
  if (((jint) [((NSString *) nil_chk(str)) length]) == 0) {
    return JreLoadStatic(OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter, EMPTY);
  }
  IOSBooleanArray *array = [IOSBooleanArray newArrayWithLength:((jint) [str length])];
  for (jint i = 0; i < array->size_; i++) {
    jchar ch = [str charAtWithInt:i];
    if (ch == 'T') {
      *IOSBooleanArray_GetRef(array, i) = true;
    }
    else if (ch == 'F') {
      *IOSBooleanArray_GetRef(array, i) = false;
    }
    else {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Invalid boolean[] string, must consist only of 'T' and 'F'");
    }
  }
  return array;
}

- (IOSClass *)getEffectiveType {
  return IOSClass_booleanArray(1);
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[Z", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(convertToStringWithId:);
  methods[1].selector = @selector(convertFromStringWithIOSClass:withNSString:);
  methods[2].selector = @selector(getEffectiveType);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertToString", "[Z", "convertFromString", "LIOSClass;LNSString;", "(Ljava/lang/Class<+[LZ;>;Ljava/lang/String;)[Z", "()Ljava/lang/Class<*>;", "LOrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter;" };
  static const J2ObjcClassInfo _OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1 = { "", "org.joda.convert.factory", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 6, -1, -1, -1, -1 };
  return &_OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1;
}

@end

void OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1_initWithNSString_withInt_(OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1 *self, NSString *__name, jint __ordinal) {
  OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1 *new_OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(OrgJodaConvertFactoryBooleanArrayStringConverterFactory_BooleanArrayStringConverter_$1, initWithNSString_withInt_, __name, __ordinal)
}
